{"version":3,"sources":["redux/search/search.selectors.js","redux/search/search.types.js","components/input-value/input-value.component.jsx","redux/search/search.actions.js","components/custom-input/custom-input.component.jsx","components/header/header.component.jsx","components/filter/filter.component.jsx","redux/filter/filter.actions.js","redux/filter/filter.selectors.js","components/filter-wrapper/filter-wrapper.component.jsx","App.jsx","serviceWorker.js","redux/search/search.reducer.js","redux/filter/filter.reducer.js","redux/root-reducer.js","redux/store.js","index.js","redux/filter/filter.types.js"],"names":["selectSearch","state","search","selectSelectedValues","createSelector","selectedValues","selectValue","value","SearchTypes","connect","dispatch","removeValue","type","payload","className","onClick","text","mapStateToProps","createStructuredSelector","addValue","handleChange","length","map","key","id","onChange","target","onKeyUp","e","Header","CustomCheckbox","input","label","FormControlLabel","control","Checkbox","checked","CustomSlider","min","max","marks","Slider","event","Filter","this","props","initialize","age","experience","lastExperience","open","closeFilter","reset","Accordion","AccordionSummary","expandIcon","AccordionDetails","classes","root","Field","component","name","Component","reduxForm","form","FilterTypes","FILTER_CLOSE","selectOpen","filter","FILTER_OPEN","App","Boolean","window","location","hostname","match","initialState","searchReducer","action","nanoid","require","filterReducer","combineReducers","formReducer","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d4dd0843.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\n\r\nconst selectSearch = state => state.search;\r\n\r\nexport const selectSelectedValues = createSelector(\r\n    [selectSearch],\r\n    search => search.selectedValues\r\n);\r\n\r\nexport const selectValue = createSelector(\r\n    [selectSearch],\r\n    search => search.value\r\n);","export const SearchTypes = {\r\n    ADD_SELECTED_VALUE: 'ADD_SELECTED_VALUE',\r\n    REMOVE_SELECTED_VALUE: 'REMOVE_SELECTED_VALUE',\r\n    HANDLE_INPUT_CHANGE: 'HANDLE_INPUT_CHANGE'\r\n}","import React from 'react';\r\nimport { removeValue } from '../../redux/search/search.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './input-value.styles.scss';\r\n\r\nconst InputValue = ({ value, removeValue }) => (\r\n    <div className=\"input-value\" onClick={() => removeValue(value)}>\r\n        <span className=\"value-text\">{value.text}</span>\r\n    </div>\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeValue: value => dispatch(removeValue(value))\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps \r\n)(InputValue);","import { SearchTypes } from \"./search.types\";\r\n\r\nexport const addValue = value => ({\r\n    type: SearchTypes.ADD_SELECTED_VALUE,\r\n    payload: value\r\n});\r\n\r\nexport const removeValue = value => ({\r\n    type: SearchTypes.REMOVE_SELECTED_VALUE,\r\n    payload: value\r\n});\r\n\r\nexport const handleChange = value => ({\r\n    type: SearchTypes.HANDLE_INPUT_CHANGE,\r\n    payload: value\r\n});","import React from 'react';\r\n\r\nimport './custom-input.styles.scss';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectSelectedValues, selectValue } from '../../redux/search/search.selectors';\r\nimport { connect } from 'react-redux';\r\nimport InputValue from '../input-value/input-value.component';\r\nimport { addValue, handleChange } from '../../redux/search/search.actions';\r\n\r\nconst CustomInput = ({ selectedValues, value, handleChange, addValue }) => (\r\n    <div className=\"input-wrapper\">\r\n        {\r\n            selectedValues.length\r\n                ?\r\n                (\r\n                    <div className=\"selected-values\">\r\n                        {\r\n                            selectedValues.map(value => <InputValue key={value.id} value={value} />)\r\n                        }\r\n                    </div>\r\n                )\r\n                : null\r\n        }\r\n        <div className=\"input-field\">\r\n            <input\r\n                type=\"search\"\r\n                value={value}\r\n                onChange={\r\n                    ({ target: { value } }) => handleChange(value)\r\n                }\r\n                onKeyUp={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        addValue();\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    selectedValues: selectSelectedValues,\r\n    value: selectValue\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addValue: () => dispatch(addValue()),\r\n    handleChange: value => dispatch(handleChange(value))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomInput);","import React from 'react';\r\n\r\nimport './header.styles.scss';\r\nimport CustomInput from '../custom-input/custom-input.component';\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-container\">\r\n            <CustomInput />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Accordion, AccordionSummary, AccordionDetails, FormControlLabel, Checkbox, Slider } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport './filter.styles.scss';\r\nimport { closeFilter } from '../../redux/filter/filter.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CustomCheckbox = ({ input, label }) => (\r\n    <FormControlLabel\r\n        control={\r\n            <Checkbox\r\n                checked={input.value ? true : false}\r\n                onChange={input.onChange}\r\n            />\r\n        }\r\n        label={label}\r\n    ></FormControlLabel>\r\n)\r\n\r\nconst CustomSlider = ({ input, min, max, marks }) => (\r\n    <Slider\r\n        value={input.value || [0, 0]}\r\n        min={min}\r\n        max={max}\r\n        marks={marks}\r\n        onChange={(event, value) => input.onChange(value)}\r\n    />\r\n)\r\n\r\nclass Filter extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initialize({\r\n            age: [0, 60],\r\n            experience: [0, 15],\r\n            lastExperience: [0, 10],\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { open, closeFilter, reset } = this.props;\r\n        return (\r\n            <form className={`${open ? 'open' : ''} form`}>\r\n                <div className=\"close-button\">\r\n                    <span onClick={() => closeFilter()}>&#10005;</span>\r\n                </div>\r\n                <div className=\"form-header\">\r\n                    <label>Фильтры</label>\r\n                    <span className=\"clear-button\" onClick={() => reset()}>Очистить</span>\r\n                </div>\r\n                <div className=\"filter-menu\">\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            Общие\r\n                        </AccordionSummary>\r\n                        <AccordionDetails\r\n                            classes={{\r\n                                root: \"inside-accorion\"\r\n                            }}\r\n                        >\r\n                            <Field\r\n                                component={CustomCheckbox}\r\n                                name=\"hideProfile\"\r\n                                label=\"Скрывать профили, просмотренные за 30 дней\"\r\n                            />\r\n\r\n                            <Field\r\n                                component={CustomCheckbox}\r\n                                name=\"undeclLocation\"\r\n                                label=\"Профили со спорной локацией\"\r\n                            />\r\n\r\n                            <Field\r\n                                component={CustomCheckbox}\r\n                                name=\"noComments\"\r\n                                label=\"Профили без комментариев\"\r\n                            />\r\n\r\n                            <Field\r\n                                component={CustomCheckbox}\r\n                                name=\"inOwnFolder\"\r\n                                label=\"Профили, отобранные в папки\"\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"filter-menu\">\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}>\r\n                            Возраст\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Field\r\n                                component={CustomSlider}\r\n                                min={0}\r\n                                max={60}\r\n                                marks={\r\n                                    [\r\n                                        { value: 0, label: '0' },\r\n                                        { value: 18, label: '18' },\r\n                                        { value: 25, label: '25' },\r\n                                        { value: 30, label: '30' },\r\n                                        { value: 35, label: '35' },\r\n                                        { value: 40, label: '40' },\r\n                                        { value: 50, label: '50' },\r\n                                        { value: 60, label: '60+' }\r\n                                    ]\r\n                                }\r\n                                name=\"age\"\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"filter-menu\">\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}>\r\n                            Опыт работы\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Field\r\n                                min={0}\r\n                                max={15}\r\n                                marks={\r\n                                    [\r\n                                        { value: 0, label: '0' },\r\n                                        { value: 3, label: '3' },\r\n                                        { value: 6, label: '6' },\r\n                                        { value: 9, label: '7' },\r\n                                        { value: 12, label: '12' },\r\n                                        { value: 15, label: '15+' }\r\n                                    ]\r\n                                }\r\n                                component={CustomSlider}\r\n                                name=\"experience\"\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"filter-menu\">\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}>\r\n                            Опыт работы на последнем месте\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Field\r\n                                min={0}\r\n                                max={10}\r\n                                marks={\r\n                                    [\r\n                                        { value: 0, label: '0' },\r\n                                        { value: 2, label: '2' },\r\n                                        { value: 4, label: '4' },\r\n                                        { value: 6, label: '6' },\r\n                                        { value: 8, label: '8' },\r\n                                        { value: 10, label: '10+' }\r\n                                    ]\r\n                                }\r\n                                component={CustomSlider}\r\n                                name=\"lastExperience\"\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n};\r\n\r\nFilter = reduxForm({\r\n    form: 'filter'\r\n})(Filter);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeFilter: () => dispatch(closeFilter())\r\n})\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Filter);","import { FilterTypes } from \"./filter.types\";\r\n\r\nexport const openFilter = () => ({\r\n    type: FilterTypes.FILTER_OPEN\r\n});\r\n\r\nexport const closeFilter = () => ({\r\n    type: FilterTypes.FILTER_CLOSE\r\n});","import { createSelector } from \"reselect\";\r\n\r\nconst selectFilter = state => state.filter;\r\n\r\nexport const selectOpen = createSelector(\r\n    [selectFilter],\r\n    filter => filter.open\r\n);","import React from 'react';\r\nimport Filter from '../filter/filter.component';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectOpen } from '../../redux/filter/filter.selectors';\r\nimport { connect } from 'react-redux';\r\nimport { openFilter } from '../../redux/filter/filter.actions';\r\n\r\nimport './filter-wrapper.styles.scss';\r\n\r\nconst FilterWrapper = ({ open, dispatch }) => (\r\n    <div className=\"filter-wrapper\">\r\n        <Filter open={open}/>\r\n        <div className={`${open ? 'open' : ''} open-icon`}>\r\n            <TuneIcon \r\n                onClick={() => dispatch(openFilter()) }/>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\topen: selectOpen\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)(FilterWrapper);","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/header.component';\nimport FilterWrapper from './components/filter-wrapper/filter-wrapper.component';\n\nconst App = () => (\n\t<>\n\t\t<Header />\n\t\t<main>\n\t\t\t<FilterWrapper />\n\t\t</main>\n\t</>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SearchTypes } from './search.types';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst initialState = {\r\n    selectedValues: [],\r\n    value: ''\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SearchTypes.ADD_SELECTED_VALUE:\r\n            const value = {\r\n                id: nanoid(),\r\n                text: state.value\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedValues: [...state.selectedValues, value],\r\n                value: ''\r\n            }\r\n        case SearchTypes.REMOVE_SELECTED_VALUE:\r\n            return {\r\n                ...state,\r\n                selectedValues: state.selectedValues.filter(value => value.id !== action.payload.id)\r\n            }\r\n        case SearchTypes.HANDLE_INPUT_CHANGE: \r\n            return {\r\n                ...state,\r\n                value: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchReducer;","const { FilterTypes } = require(\"./filter.types\")\r\n\r\nconst initialState = {\r\n    open: false\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FilterTypes.FILTER_OPEN: \r\n            return {\r\n                ...state,\r\n                open: true\r\n            }\r\n        case FilterTypes.FILTER_CLOSE:\r\n            return {\r\n                ...state,\r\n                open: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filterReducer;","import { combineReducers } from 'redux';\r\nimport searchReducer from './search/search.reducer';\r\nimport filterReducer from './filter/filter.reducer';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n    search: searchReducer,\r\n    filter: filterReducer,\r\n    form: formReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const FilterTypes = {\r\n    FILTER_OPEN: 'FILTER_OPEN',\r\n    FILTER_CLOSE: 'FILTER_CLOSE'\r\n}"],"sourceRoot":""}